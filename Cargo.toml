[package]
edition = "2021"
name = "rp2040-project-template"
version = "0.1.0"
license = "MIT OR Apache-2.0"

[dependencies]
cortex-m = "0.7"
cortex-m-rt = "0.7"
embedded-hal = { version = "1.0.0" }

defmt = "0.3"
defmt-rtt = "0.4"
panic-probe = { version = "0.3", features = ["print-defmt"] }

# We're using a Pico by default on this template
rp2040-hal = { path = "C:\\Users\\pablo\\projects\\rp-hal\\rp2040-hal" }
rp-pico = { version = "0.9", default-features = false, features = [
    "rt",
    "critical-section-impl",
    "rom-func-cache",
] }


##
display-interface = "0.5.0"
pio = "0.2.1"
pio-proc = "0.2.2"
ili9341 = { path = "C:\\Users\\pablo\\projects\\ili9341-rs", features = [
    "embedded-graphics-core",
    "graphics",
], default-features = false }
embedded-graphics = "0.8.1"
gb-core = { path = "C:\\Users\\pablo\\projects\\rust-gb\\gb-core" }
embedded-alloc = "0.5.1"
num-traits = { version = "0.2.19", default-features = false, features = [
    "libm",
] }
embedded-dma = "0.2.0"
embedded-sdmmc = "0.8.0"
const-lru = "1.0.0"
embedded-hal-bus = { version = "0.2.0", features = ["defmt-03"] }
# We aren't using this, but embedded-hal-bus 0.2 unconditionally requires atomics.
# Should be fixed in e-h-b 0.3 via https://github.com/rust-embedded/embedded-hal/pull/607
portable-atomic = { version = "1.7.0", features = ["critical-section"] }
##
rp2040-boot2 = { version = "0.3" }
[patch.crates-io]
rp2040-hal = { path = "C:\\Users\\pablo\\projects\\rp-hal\\rp2040-hal" }
# but you can use any BSP. Uncomment this to use the pro_micro_rp2040 BSP instead
# sparkfun-pro-micro-rp2040 = "0.8"

# If you're not going to use a Board Support Package you'll need these:
# rp2040-hal = { version="0.10", features=["rt", "critical-section-impl"] }
# rp2040-boot2 = "0.3"


# cargo build/run
[profile.dev]
codegen-units = 1
debug = 2
debug-assertions = true
incremental = false
opt-level = 0
overflow-checks = false

# cargo build/run --release
[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 3
overflow-checks = false

# do not optimize proc-macro crates = faster builds from scratch
[profile.dev.build-override]
codegen-units = 8
debug = false
debug-assertions = false
opt-level = 0
overflow-checks = false

[profile.release.build-override]
codegen-units = 8
debug = false
debug-assertions = false
opt-level = 0
overflow-checks = false

# cargo test
[profile.test]
codegen-units = 1
debug = 2
debug-assertions = true
incremental = false
opt-level = 3
overflow-checks = false

# cargo test --release
[profile.bench]
codegen-units = 1
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 3
